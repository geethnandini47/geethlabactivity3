AWSTemplateFormatVersion: '2010-09-09'
Description: CodeDeploy setup with LaunchTemplate instead of LaunchConfiguration

Parameters:
  GitHubRepoName:
    Type: String
    Description: GitHub repository in format owner/repo
  GitHubThumbprintList:
    Type: String
    Description: GitHub OIDC provider thumbprint
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  DefaultVPC:
    Type: AWS::EC2::VPC::Id
    Description: The default VPC to launch instances into
  DefaultSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The default subnets for the Auto Scaling Group

Resources:

  ArtifactBucket:
    Type: AWS::S3::Bucket

  WebappSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access
      VpcId: !Ref DefaultVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebappRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy

  WebappInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref WebappRole

  WebappLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        InstanceType: t2.micro
        IamInstanceProfile:
          Arn: !GetAtt WebappInstanceProfile.Arn
        SecurityGroupIds:
          - !Ref WebappSecurityGroup
        UserData: !Base64 |
          #!/bin/bash
          yum update -y
          yum install -y ruby wget
          cd /home/ec2-user
          wget https://aws-codedeploy-${AWS::Region}.s3.${AWS::Region}.amazonaws.com/latest/install
          chmod +x ./install
          ./install auto

  WebappTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref DefaultVPC
      Port: 80
      Protocol: HTTP
      TargetType: instance
      HealthCheckPath: /

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: !Ref DefaultSubnets
      SecurityGroups:
        - !Ref WebappSecurityGroup

  WebappListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebappTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  WebappAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref DefaultSubnets
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      LaunchTemplate:
        LaunchTemplateId: !Ref WebappLaunchTemplate
        Version: !GetAtt WebappLaunchTemplate.LatestVersionNumber
      TargetGroupARNs:
        - !Ref WebappTargetGroup

  GitHubRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: repo:${GitHubRepoName}:*
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

Outputs:
  ALBDNSName:
    Description: DNS of the load balancer
    Value: !GetAtt ApplicationLoadBalancer.DNSName
  ArtifactBucket:
    Description: S3 bucket for GitHub Actions artifacts
    Value: !Ref ArtifactBucket
  GitHubIAMRole:
    Description: IAM Role for GitHub OIDC
    Value: !GetAtt GitHubRole.Arn
